<!DOCTYPE html>
<html>
<head>
    <title>Shopify Auction Manager</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Add Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <!-- Add Material Icons -->
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons+Round" rel="stylesheet">
    <style>
        :root {
            /* Color system */
            --primary-color: #4361ee;
            --primary-hover: #3a56d4;
            --secondary-color: #4cc9f0;
            --success-color: #2ecc71;
            --warning-color: #f39c12;
            --danger-color: #e74c3c;
            --light-color: #f8f9fa;
            --dark-color: #212529;
            --gray-100: #f8f9fa;
            --gray-200: #e9ecef;
            --gray-300: #dee2e6;
            --gray-400: #ced4da;
            --gray-500: #adb5bd;
            --gray-600: #6c757d;
            --gray-700: #495057;
            --gray-800: #343a40;
            --gray-900: #212529;
            
            /* Shadows */
            --shadow-sm: 0 1px 2px rgba(0,0,0,0.05);
            --shadow-md: 0 4px 6px rgba(0,0,0,0.05), 0 1px 3px rgba(0,0,0,0.1);
            --shadow-lg: 0 10px 15px rgba(0,0,0,0.05), 0 4px 6px rgba(0,0,0,0.05);
            
            /* Border radius */
            --border-radius-sm: 0.25rem;
            --border-radius-md: 0.5rem;
            --border-radius-lg: 0.75rem;
            --border-radius-xl: 1rem;
            
            /* Spacing */
            --spacing-xs: 0.25rem;
            --spacing-sm: 0.5rem;
            --spacing-md: 1rem;
            --spacing-lg: 1.5rem;
            --spacing-xl: 2rem;
        }
        
        /* Reset and base styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
            background-color: #f5f7fb;
            color: var(--gray-800);
            line-height: 1.5;
            padding: 0;
            margin: 0;
        }
        
        .container {
            max-width: 1280px;
            margin: 0 auto;
            padding: var(--spacing-md);
        }
        
        /* Typography */
        h1, h2, h3, h4, h5, h6 {
            font-weight: 600;
            line-height: 1.2;
            margin-bottom: var(--spacing-md);
            color: var(--gray-900);
        }
        
        h1 {
            font-size: 2rem;
            font-weight: 700;
            margin-bottom: var(--spacing-lg);
        }
        
        h2 {
            font-size: 1.5rem;
            margin-top: var(--spacing-lg);
        }
        
        h3 {
            font-size: 1.25rem;
            font-weight: 600;
        }
        
        p {
            margin-bottom: var(--spacing-md);
        }
        
        /* Card styles */
        .card {
            background-color: white;
            border-radius: var(--border-radius-md);
            box-shadow: var(--shadow-md);
            padding: var(--spacing-lg);
            margin-bottom: var(--spacing-lg);
            border: 1px solid var(--gray-200);
        }
        
        .card-title {
            display: flex;
            align-items: center;
            margin-bottom: var(--spacing-md);
            font-weight: 600;
            font-size: 1.1rem;
            color: var(--gray-800);
        }
        
        .card-title .material-icons-round {
            margin-right: var(--spacing-sm);
            color: var(--primary-color);
        }
        
        /* Header */
        .header {
            background-color: white;
            border-bottom: 1px solid var(--gray-200);
            padding: var(--spacing-md) 0;
            margin-bottom: var(--spacing-xl);
        }
        
        .header-content {
            display: flex;
            align-items: center;
            justify-content: space-between;
        }
        
        .logo {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--primary-color);
            text-decoration: none;
            display: flex;
            align-items: center;
        }
        
        .logo .material-icons-round {
            margin-right: var(--spacing-xs);
        }
        
        /* Button styles */
        .btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            padding: 0.5rem 1rem;
            font-size: 0.95rem;
            font-weight: 500;
            border-radius: var(--border-radius-md);
            cursor: pointer;
            transition: all 0.2s ease;
            text-decoration: none;
            border: 1px solid transparent;
            gap: 0.5rem;
        }
        
        .btn:hover {
            transform: translateY(-1px);
        }
        
        .btn:active {
            transform: translateY(0);
        }
        
        .btn-primary {
            background-color: var(--primary-color);
            color: white;
            border-color: var(--primary-color);
        }
        
        .btn-primary:hover {
            background-color: var(--primary-hover);
            border-color: var(--primary-hover);
        }
        
        .btn-success {
            background-color: var(--success-color);
            color: white;
            border-color: var(--success-color);
        }
        
        .btn-success:hover {
            background-color: #27ae60;
            border-color: #27ae60;
        }
        
        .btn-danger {
            background-color: var(--danger-color);
            color: white;
            border-color: var(--danger-color);
        }
        
        .btn-danger:hover {
            background-color: #c0392b;
            border-color: #c0392b;
        }
        
        .btn-secondary {
            background-color: var(--gray-100);
            color: var(--gray-800);
            border-color: var(--gray-300);
        }
        
        .btn-secondary:hover {
            background-color: var(--gray-200);
            border-color: var(--gray-400);
        }
        
        .btn-lg {
            padding: 0.75rem 1.5rem;
            font-size: 1rem;
        }
        
        .btn-sm {
            padding: 0.25rem 0.5rem;
            font-size: 0.85rem;
            border-radius: var(--border-radius-sm);
        }
        
        /* Utility classes */
        .text-center { text-align: center; }
        .text-primary { color: var(--primary-color); }
        .text-success { color: var(--success-color); }
        .text-danger { color: var(--danger-color); }
        .text-warning { color: var(--warning-color); }
        .text-muted { color: var(--gray-600); }
        
        .bg-light { background-color: var(--gray-100); }
        .bg-primary { background-color: var(--primary-color); }
        .bg-success { background-color: var(--success-color); }
        .bg-danger { background-color: var(--danger-color); }
        .bg-warning { background-color: var(--warning-color); }
        
        .font-weight-bold { font-weight: 700; }
        .font-weight-semibold { font-weight: 600; }
        .font-weight-medium { font-weight: 500; }
        
        .flex { display: flex; }
        .flex-wrap { flex-wrap: wrap; }
        .flex-column { flex-direction: column; }
        .justify-content-between { justify-content: space-between; }
        .justify-content-center { justify-content: center; }
        .align-items-center { align-items: center; }
        .gap-1 { gap: 0.25rem; }
        .gap-2 { gap: 0.5rem; }
        .gap-3 { gap: 1rem; }
        .gap-4 { gap: 1.5rem; }
        
        .mb-1 { margin-bottom: 0.25rem; }
        .mb-2 { margin-bottom: 0.5rem; }
        .mb-3 { margin-bottom: 1rem; }
        .mb-4 { margin-bottom: 1.5rem; }
        .mb-5 { margin-bottom: 2rem; }
        
        .mt-1 { margin-top: 0.25rem; }
        .mt-2 { margin-top: 0.5rem; }
        .mt-3 { margin-top: 1rem; }
        .mt-4 { margin-top: 1.5rem; }
        .mt-5 { margin-top: 2rem; }
        
        .p-3 { padding: 1rem; }
        .p-4 { padding: 1.5rem; }
        
        .rounded { border-radius: var(--border-radius-md); }
        .border { border: 1px solid var(--gray-300); }
        
        /* Schedule Styling */
        .schedule-container {
            background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
            border: 1px solid var(--gray-300);
            border-radius: var(--border-radius-lg);
            padding: 1.5rem;
        }
        
        .schedule-item {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0.75rem 1rem;
            background: white;
            border-radius: var(--border-radius-md);
            border: 1px solid rgba(0,0,0,0.1);
            margin-bottom: 0.5rem;
            transition: all 0.2s ease;
        }
        
        .schedule-item:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        }
        
        .schedule-item.current {
            background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);
            color: white;
            border-color: var(--danger-color);
            box-shadow: 0 4px 15px rgba(255, 107, 107, 0.4);
        }
        
        .schedule-item.upcoming {
            background: linear-gradient(135deg, #74b9ff 0%, #0984e3 100%);
            color: white;
            border-color: var(--primary-color);
        }
        
        .schedule-time {
            font-weight: 600;
            font-size: 1.1rem;
        }
        
        .schedule-discount {
            font-weight: 700;
            font-size: 1.2rem;
            padding: 0.25rem 0.75rem;
            background: rgba(255,255,255,0.2);
            border-radius: 20px;
        }
        
        .schedule-countdown {
            font-size: 0.9rem;
            opacity: 0.9;
            font-weight: 500;
        }
        
        /* Auction Dashboard Styling */
        .auction-dashboard {
            margin-bottom: 2rem;
        }
        
        .auction-status-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: var(--border-radius-lg);
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
        }
        
        .auction-status-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin-top: 1rem;
        }
        
        .status-item {
            background: rgba(255, 255, 255, 0.15);
            border-radius: var(--border-radius-md);
            padding: 1rem;
            text-align: center;
            backdrop-filter: blur(10px);
        }
        
        .status-label {
            font-size: 0.9rem;
            opacity: 0.9;
            margin-bottom: 0.5rem;
        }
        
        .status-value {
            font-size: 1.4rem;
            font-weight: 700;
        }
        
        .countdown-display {
            font-family: 'Courier New', monospace;
            font-size: 2rem;
            font-weight: 700;
            text-align: center;
            background: rgba(255, 255, 255, 0.2);
            border-radius: var(--border-radius-lg);
            padding: 1rem;
            margin: 1rem 0;
        }
        
        /* Timeline Styling */
        .timeline-container {
            background: #f8fafc;
            border: 1px solid #e2e8f0;
            border-radius: var(--border-radius-lg);
            padding: 1.5rem;
            position: relative;
        }
        
        .timeline-item {
            display: flex;
            align-items: center;
            padding: 1rem 0;
            border-left: 3px solid #e2e8f0;
            margin-left: 1rem;
            padding-left: 2rem;
            position: relative;
        }
        
        .timeline-item::before {
            content: '';
            position: absolute;
            left: -6px;
            top: 50%;
            transform: translateY(-50%);
            width: 12px;
            height: 12px;
            border-radius: 50%;
            background: #e2e8f0;
        }
        
        .timeline-item.active {
            border-left-color: #ff6b6b;
        }
        
        .timeline-item.active::before {
            background: #ff6b6b;
            box-shadow: 0 0 0 4px rgba(255, 107, 107, 0.3);
        }
        
        .timeline-item.upcoming {
            border-left-color: #74b9ff;
        }
        
        .timeline-item.upcoming::before {
            background: #74b9ff;
        }
        
        .timeline-content {
            flex: 1;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .timeline-time {
            font-weight: 600;
            font-size: 1.1rem;
            color: #2d3748;
        }
        
        .timeline-discount {
            font-weight: 700;
            font-size: 1.2rem;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 20px;
            min-width: 70px;
            text-align: center;
        }
        
        .timeline-countdown {
            font-size: 0.9rem;
            color: #718096;
            font-weight: 500;
            margin-top: 0.25rem;
        }
        
        .timeline-item.summary {
            opacity: 0.7;
            border-style: dashed;
        }
        
        .timeline-item.summary::before {
            background: #a0aec0;
        }
        
        .timeline-item.summary .timeline-discount {
            background: linear-gradient(135deg, #a0aec0 0%, #718096 100%);
        }
        
        .timeline-item.final {
            border: 2px solid #38a169;
            background: rgba(56, 161, 105, 0.05);
        }
        
        .timeline-item.final::before {
            background: #38a169;
            width: 12px;
            height: 12px;
        }
        
        .timeline-item.final .timeline-discount {
            background: linear-gradient(135deg, #38a169 0%, #2f855a 100%);
            font-size: 1.3rem;
        }
        
        .alert {
            padding: var(--spacing-md);
            border-radius: var(--border-radius-md);
            margin-bottom: var(--spacing-lg);
            border-left: 4px solid;
        }
        
        .alert-success {
            background-color: rgba(46, 204, 113, 0.1);
            border-left-color: var(--success-color);
            color: #1e8449;
        }
        
        .alert-danger {
            background-color: rgba(231, 76, 60, 0.1);
            border-left-color: var(--danger-color);
            color: #a93226;
        }
        
        .grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: var(--spacing-lg);
        }
        
        /* Existing styles (modified) below */
        .product-grid { 
            display: grid; 
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr)); 
            gap: var(--spacing-lg); 
        }
        
        .product-card { 
            background-color: white;
            border-radius: var(--border-radius-md);
            box-shadow: var(--shadow-md);
            padding: var(--spacing-lg);
            border: 1px solid var(--gray-200);
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }
        
        .product-card:hover {
            transform: translateY(-3px);
            box-shadow: var(--shadow-lg);
        }
        
        .action-button {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            padding: 0.75rem 1.25rem;
            font-size: 0.95rem;
            font-weight: 500;
            border-radius: var(--border-radius-md);
            cursor: pointer;
            transition: all 0.2s ease;
            text-decoration: none;
            border: none;
            gap: 0.5rem;
            background-color: var(--primary-color);
            color: white;
        }
        
        .action-button:hover {
            background-color: var(--primary-hover);
            transform: translateY(-1px);
        }
        
        .discount-badge {
            padding: 1rem;
            background-color: var(--gray-100);
            border-radius: var(--border-radius-md);
            min-width: 140px;
            text-align: center;
        }
        
        .discount-value {
            font-size: 1.75rem;
            font-weight: 700;
            color: var(--danger-color);
        }
        
        .countdown-value {
            font-size: 1.75rem;
            font-weight: 700;
            color: var(--primary-color);
        }
        
        .auction-status {
            padding: 1rem;
            background-color: var(--gray-100);
            border-radius: var(--border-radius-md);
            margin-bottom: 1rem;
        }
        
        /* Form styles */
        .form-group {
            margin-bottom: 1rem;
        }
        
        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
            color: var(--gray-700);
        }
        
        .form-control, .form-select {
            display: block;
            width: 100%;
            padding: 0.5rem 0.75rem;
            font-size: 1rem;
            line-height: 1.5;
            color: var(--gray-900);
            background-color: white;
            background-clip: padding-box;
            border: 1px solid var(--gray-300);
            border-radius: var(--border-radius-md);
            transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
        }
        
        .form-control:focus, .form-select:focus {
            border-color: var(--primary-color);
            outline: 0;
            box-shadow: 0 0 0 0.2rem rgba(67, 97, 238, 0.25);
        }
        
        .radio-label {
            display: flex;
            align-items: center;
            cursor: pointer;
            margin-bottom: 0.5rem;
        }
        
        .radio-option {
            margin-bottom: 0.75rem;
        }
        
        .radio-label input[type="radio"] {
            margin-right: 0.5rem;
        }
        
        /* Search */
        .search-container {
            position: relative;
            margin-bottom: 1rem;
        }
        
        .search-input {
            display: block;
            width: 100%;
            padding: 0.75rem 0.75rem 0.75rem 2.5rem;
            font-size: 1rem;
            line-height: 1.5;
            color: var(--gray-900);
            background-color: white;
            background-clip: padding-box;
            border: 1px solid var(--gray-300);
            border-radius: var(--border-radius-md);
            transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
        }
        
        .search-input:focus {
            border-color: var(--primary-color);
            outline: 0;
            box-shadow: 0 0 0 0.2rem rgba(67, 97, 238, 0.25);
        }
        
        .search-icon {
            position: absolute;
            left: 0.75rem;
            top: 50%;
            transform: translateY(-50%);
            color: var(--gray-500);
        }
        
        /* Products */
        .products-container {
            max-height: 600px;
            overflow-y: auto;
            padding-right: 0.5rem;
        }
        
        .product-title {
            font-size: 1.1rem;
            margin-bottom: 0.5rem;
        }
        
        .product-summary {
            cursor: pointer;
            color: var(--primary-color);
            font-weight: 500;
            padding: 0.5rem 0;
        }
        
        .product-summary:hover {
            color: var(--primary-hover);
        }
        
        .variant-card {
            padding: 0.75rem;
            background-color: var(--gray-100);
            border-radius: var(--border-radius-sm);
            margin-bottom: 0.5rem;
        }
        
        .empty-state {
            text-align: center;
            padding: 3rem 1rem;
            color: var(--gray-600);
        }
        
        /* Preview section styles */
        #auctionPreviewSection {
            border: 2px solid var(--primary-color);
            background: linear-gradient(135deg, rgba(67, 97, 238, 0.05) 0%, rgba(118, 75, 162, 0.05) 100%);
        }
        
        #auctionPreviewSection .card-title {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            margin: -1.5rem -1.5rem 1.5rem -1.5rem;
            padding: 1rem 1.5rem;
        }
        
        .preview-summary-card {
            border-radius: var(--border-radius-lg);
            overflow: hidden;
        }
    </style>
</head>
<body>
    <div class="header">
        <div class="container header-content">
            <a href="/" class="logo">
                <span class="material-icons-round">shopping_cart</span>
                Shopify Auction Manager
            </a>
        </div>
    </div>
    
    <div class="container">
        <% if (error) { %>
            <div class="alert alert-danger">
                <%= error %>
            </div>
        <% } %>

        <% if (message) { %>
            <div class="alert alert-success">
                <%= message %>
            </div>
        <% } %>

        <!-- -------- AUCTION STATUS & TIMELINE SECTION -------- -->
        <div class="auction-dashboard">
            <div class="card">
                <div class="card-title">
                    <span class="material-icons-round">dashboard</span>
                    Auction Status & Timeline
                </div>
                
                <!-- Current Status -->
                <div id="auctionStatusSection">
                    <div id="auctionStatusLoading" class="flex align-items-center gap-2 p-3">
                        <span class="material-icons-round">sync</span>
                        <span>Indlæser auction status...</span>
                    </div>
                    <div id="auctionStatusContent" style="display: none;">
                        <!-- Content will be loaded via JavaScript -->
                    </div>
                </div>
                
                <!-- Price Drop Timeline -->
                <div id="priceTimelineSection" class="mt-4">
                    <h4 class="font-weight-semibold mb-3 flex align-items-center gap-2">
                        <span class="material-icons-round" style="font-size: 20px;">timeline</span>
                        Kommende Pris Ændringer
                    </h4>
                    <div id="priceTimeline">
                        <div class="text-muted">Henter tidslinje...</div>
                    </div>
                    <button id="showCompleteTimeline" class="btn btn-outline-primary mt-3" style="display: none;">
                        <span class="material-icons-round" style="font-size: 18px;">expand_more</span>
                        Vis Komplet Tidsplan til 100%
                    </button>
                </div>
                
                <!-- Complete Timeline Overview -->
                <div id="completeTimelineSection" class="mt-4" style="display: none;">
                    <h4 class="font-weight-semibold mb-3 flex align-items-center gap-2">
                        <span class="material-icons-round" style="font-size: 20px;">view_list</span>
                        Komplet Tidsplan (Til 100% Rabat)
                    </h4>
                    <div class="card">
                        <div class="card-body">
                            <div id="completeTimeline" style="max-height: 400px; overflow-y: auto;">
                                <div class="text-muted">Henter komplet tidsplan...</div>
                            </div>
                        </div>
                    </div>
                    <button id="toggleCompleteTimeline" class="btn btn-outline-secondary mt-3">
                        <span class="material-icons-round" style="font-size: 18px;">expand_less</span>
                        Skjul Komplet Tidsplan
                    </button>
                </div>
                
                <div class="flex gap-2 mt-4">
                    <button id="refreshAuctionStatus" class="btn btn-secondary">
                        <span class="material-icons-round" style="font-size: 18px;">refresh</span>
                        Opdater Status
                    </button>
                    <a href="/api/auction-status" target="_blank" class="btn btn-secondary">
                        <span class="material-icons-round" style="font-size: 18px;">data_object</span>
                        Se API Data
                    </a>
                </div>
            </div>
        </div>

        <% if (auctions && auctions.length > 0) { %>
            <div class="card">
                <div class="card-title">
                    <span class="material-icons-round">local_fire_department</span>
                    Auction in Progress
                </div>
                <% 
                // Find the global auction
                const globalAuction = auctions.find(a => a.product_id === 'global');
                if (globalAuction) {
                    const nextUpdate = new Date(globalAuction.next_update);
                    const now = new Date();
                    const timeUntilNextUpdate = Math.max(0, Math.floor((nextUpdate - now) / 1000));
                    const minutes = Math.floor(timeUntilNextUpdate / 60);
                    const seconds = timeUntilNextUpdate % 60;
                %>
                <div class="auction-status">
                    <div class="flex gap-4 mb-3">
                        <div class="discount-badge">
                            <div class="text-muted mb-1">Current Discount</div>
                            <div class="discount-value"><%= globalAuction.reduction_percent %>%</div>
                        </div>
                        <div class="discount-badge">
                            <div class="text-muted mb-1">Next Reduction In</div>
                            <div class="countdown-value" id="countdown"><%= minutes %>m <%= seconds %>s</div>
                        </div>
                        <div class="discount-badge">
                            <div class="text-muted mb-1">Reduction Rate</div>
                            <div><%= globalAuction.reduction_percent %>% every <%= globalAuction.interval_minutes %> minute<%= globalAuction.interval_minutes > 1 ? 's' : '' %></div>
                        </div>
                    </div>
                    <div class="auction-meta flex flex-wrap gap-2 text-muted" style="font-size: 0.9rem;">
                        <div class="auction-meta-item flex align-items-center gap-1">
                            <span class="material-icons-round" style="font-size: 16px;">tag</span>
                            ID: <%= globalAuction.id %>
                        </div>
                        <div class="auction-meta-item flex align-items-center gap-1">
                            <span class="material-icons-round" style="font-size: 16px;">update</span>
                            Next Update: <%= new Date(globalAuction.next_update).toLocaleString() %>
                        </div>
                    </div>
                    
                    <!-- NEW: Price Drop Schedule -->
                    <div class="mt-4">
                        <h4 class="font-weight-semibold mb-3 flex align-items-center gap-2">
                            <span class="material-icons-round" style="font-size: 20px;">schedule</span>
                            Kommende Pris Drops (Eksakte Tidspunkter)
                        </h4>
                        <div id="price-schedule" class="schedule-container">
                            <div class="text-muted">Henter tidsplan...</div>
                        </div>
                    </div>
                </div>
                <% } else { %>
                    <p>Auction is running for <%= auctions.length %> products.</p>
                <% } %>
                
                <div class="mt-3 flex flex-wrap gap-2">
                    <form action="/stop-all-auctions" method="POST">
                        <button type="submit" class="btn btn-danger">
                            <span class="material-icons-round" style="font-size: 18px;">stop_circle</span>
                            Stop All Auctions
                        </button>
                    </form>
                    
                    <form action="/reset-all-prices" method="POST">
                        <button type="submit" class="btn btn-warning">
                            <span class="material-icons-round" style="font-size: 18px;">restore</span>
                            Reset All Prices
                        </button>
                    </form>
                </div>
            </div>
        <% } %>

        <div class="flex flex-wrap gap-2 mb-4">
            <form action="/set-compare-prices" method="POST">
                <button type="submit" class="btn btn-primary">
                    <span class="material-icons-round" style="font-size: 18px;">price_change</span>
                    Set Compare At Price for All Products
                </button>
            </form>
            
            <form action="/set-manual-discount" method="POST">
                <input type="hidden" name="discountPercent" value="10">
                <button type="submit" class="btn btn-success">
                    <span class="material-icons-round" style="font-size: 18px;">local_offer</span>
                    Set Price to -10% (Pre-Auction)
                </button>
            </form>

            <form action="/reset-all-prices" method="POST">
                <button type="submit" class="btn btn-secondary">
                    <span class="material-icons-round" style="font-size: 18px;">restore</span>
                    Revert All Prices to Original
                </button>
            </form>
        </div>

        <div class="card">
            <div class="card-title">
                <span class="material-icons-round">rocket_launch</span>
                Start Auction for All Products
            </div>
            <form action="/auctions/all" method="POST">
                <div class="form-group mb-3">
                    <label for="interval" class="form-label">Interval (minutes):</label>
                    <input type="number" name="interval" id="interval" min="1" value="1" required class="form-control">
                </div>
                <div class="form-group mb-3">
                    <label for="reductionPercent" class="form-label">Reduction Percent:</label>
                    <input type="number" name="reductionPercent" id="reductionPercent" min="1" max="100" value="5" required class="form-control">
                </div>
                <div class="form-group mb-4">
                    <label for="initialDiscount" class="form-label">Initial Discount (applied immediately):</label>
                    <input type="number" name="initialDiscount" id="initialDiscount" min="0" max="100" value="10" class="form-control">
                    <small class="form-text text-muted">This discount will be applied as soon as you create the auction</small>
                </div>
                
                <!-- Scheduling options -->
                <div class="card bg-light p-3 mb-4">
                    <h4 class="mb-3 font-weight-medium">Start Options</h4>
                    <div class="radio-option mb-2">
                        <label class="radio-label">
                            <input type="radio" name="startOption" value="immediate" id="startImmediate" checked> 
                            <span>Start auction immediately</span>
                        </label>
                    </div>
                    <div class="radio-option">
                        <label class="radio-label">
                            <input type="radio" name="startOption" value="scheduled" id="startScheduled"> 
                            <span>Schedule for later</span>
                        </label>
                    </div>
                    
                    <div id="scheduleOptions" class="mt-3" style="display: none;">
                        <div class="form-group mb-3">
                            <label for="scheduledTime" class="form-label">Start Time:</label>
                            <input type="datetime-local" name="scheduledTime" id="scheduledTime" class="form-control">
                        </div>
                        <div class="form-group">
                            <label for="timezone" class="form-label">Timezone:</label>
                            <select name="timezone" id="timezone" class="form-select">
                                <option value="CET" selected>Central European Time (CET)</option>
                                <option value="Europe/Paris">Paris</option>
                                <option value="Europe/Berlin">Berlin</option>
                                <option value="Europe/London">London</option>
                                <option value="America/New_York">New York</option>
                                <option value="America/Los_Angeles">Los Angeles</option>
                                <option value="Asia/Tokyo">Tokyo</option>
                                <option value="Australia/Sydney">Sydney</option>
                            </select>
                        </div>
                    </div>
                </div>
                
                <div class="flex gap-2">
                    <button type="button" id="previewAuction" class="btn btn-outline-primary">
                        <span class="material-icons-round" style="font-size: 18px;">preview</span>
                        Forhåndsvisning
                    </button>
                    <button type="submit" class="btn btn-primary">
                        <span class="material-icons-round" style="font-size: 18px;">play_arrow</span>
                        Start Auction
                    </button>
                    <a href="javascript:void(0)" onclick="document.getElementById('stopForm').submit();" class="btn btn-danger">
                        <span class="material-icons-round" style="font-size: 18px;">stop</span>
                        Stop Auction
                    </a>
                </div>
            </form>
            <form id="stopForm" action="/stop-all-auctions" method="POST" style="display:none;"></form>
        </div>

        <!-- Auction Preview Section -->
        <div id="auctionPreviewSection" class="card mt-4" style="display: none;">
            <div class="card-title">
                <span class="material-icons-round">visibility</span>
                Forhåndsvisning af Auction Tidslinje
            </div>
            <div class="card-body">
                <div id="previewSummary" class="mb-4">
                    <!-- Summary will be populated here -->
                </div>
                <div id="previewTimeline">
                    <!-- Timeline will be populated here -->
                </div>
                <div class="flex gap-2 mt-4">
                    <button id="confirmStartAuction" class="btn btn-success">
                        <span class="material-icons-round" style="font-size: 18px;">check_circle</span>
                        Bekræft og Start Auction
                    </button>
                    <button id="editAuction" class="btn btn-secondary">
                        <span class="material-icons-round" style="font-size: 18px;">edit</span>
                        Rediger Indstillinger
                    </button>
                </div>
            </div>
        </div>

        <div class="card">
            <div class="card-title">
                <span class="material-icons-round">inventory</span>
                Products (<%= products.length %>)
            </div>
            
            <div class="mb-3">
                <div class="search-container">
                    <span class="material-icons-round search-icon">search</span>
                    <input type="text" id="productSearch" placeholder="Search products..." class="search-input">
                </div>
            </div>
            
            <div class="products-container">
                <% if (products && products.length > 0) { %>
                    <div class="product-grid">
                        <% products.forEach(function(product) { %>
                            <div class="product-card product-item" data-title="<%= product.title.toLowerCase() %>">
                                <h3 class="product-title"><%= product.title %></h3>
                                <div class="product-meta flex flex-column gap-1 mb-3">
                                    <div class="product-id text-muted">ID: <%= product.id %></div>
                                    <div class="product-variants"><strong>Variants:</strong> <%= product.variants.length %></div>
                                </div>
                                <details class="product-details">
                                    <summary class="product-summary">View Variants</summary>
                                    <div class="variants-list mt-2">
                                        <% product.variants.forEach(function(variant) { %>
                                            <div class="variant-card">
                                                <div class="variant-id text-muted">ID: <%= variant.id %></div>
                                                <div class="variant-price"><strong>Price:</strong> $<%= variant.price %></div>
                                                <div class="variant-compare">
                                                    <strong>Compare at:</strong> 
                                                    <% if (variant.compare_at_price) { %>
                                                        $<%= variant.compare_at_price %>
                                                    <% } else { %>
                                                        <span class="text-muted">Not set</span>
                                                    <% } %>
                                                </div>
                                            </div>
                                        <% }); %>
                                    </div>
                                </details>
                            </div>
                        <% }); %>
                    </div>
                <% } else { %>
                    <div class="empty-state">
                        <span class="material-icons-round" style="font-size: 48px; opacity: 0.2;">inventory_2</span>
                        <p>No products available. Please add products to your Shopify store first.</p>
                    </div>
                <% } %>
            </div>
        </div>
    </div>

    <footer class="footer mt-5">
        <div class="container">
            <div class="footer-content">
                <p class="text-muted text-center">© <%= new Date().getFullYear() %> Shopify Auction Manager</p>
            </div>
        </div>
    </footer>

    <script>
        // Simple product search
        document.getElementById('productSearch').addEventListener('input', function(e) {
            const searchTerm = e.target.value.toLowerCase();
            document.querySelectorAll('.product-item').forEach(item => {
                const title = item.getAttribute('data-title');
                if (title.includes(searchTerm)) {
                    item.style.display = 'block';
                } else {
                    item.style.display = 'none';
                }
            });
        });
        
        // Countdown timer
        const countdownElement = document.getElementById('countdown');
        if (countdownElement) {
            let initialText = countdownElement.textContent;
            let minutesPart = initialText.match(/(\d+)m/);
            let secondsPart = initialText.match(/(\d+)s/);
            
            let minutes = minutesPart ? parseInt(minutesPart[1]) : 0;
            let seconds = secondsPart ? parseInt(secondsPart[1]) : 0;
            
            const totalSeconds = minutes * 60 + seconds;
            let remainingSeconds = totalSeconds;
            
            const countdownInterval = setInterval(() => {
                remainingSeconds -= 1;
                
                if (remainingSeconds <= 0) {
                    clearInterval(countdownInterval);
                    countdownElement.textContent = "Updating...";
                    countdownElement.classList.add('pulse-animation');
                    // Auto-refresh after a short delay to see the updated prices
                    setTimeout(() => {
                        window.location.reload();
                    }, 3000);
                } else {
                    const displayMinutes = Math.floor(remainingSeconds / 60);
                    const displaySeconds = remainingSeconds % 60;
                    countdownElement.textContent = `${displayMinutes}m ${displaySeconds}s`;
                }
            }, 1000);
        }
        
        // Schedule options toggle
        const scheduleOptions = document.getElementById('scheduleOptions');
        const startImmediateRadio = document.getElementById('startImmediate');
        const startScheduledRadio = document.getElementById('startScheduled');
        
        if (scheduleOptions && startImmediateRadio && startScheduledRadio) {
            // Handler for immediate start option
            startImmediateRadio.addEventListener('change', function() {
                if (this.checked) {
                    scheduleOptions.style.display = 'none';
                }
            });
            
            // Handler for scheduled start option
            startScheduledRadio.addEventListener('change', function() {
                if (this.checked) {
                    scheduleOptions.style.display = 'block';
                    
                    // Set default time to now + 1 hour if not already set
                    const scheduledTimeInput = document.getElementById('scheduledTime');
                    if (scheduledTimeInput && !scheduledTimeInput.value) {
                        const now = new Date();
                        now.setHours(now.getHours() + 1);
                        
                        // Format as YYYY-MM-DDTHH:MM
                        const year = now.getFullYear();
                        const month = String(now.getMonth() + 1).padStart(2, '0');
                        const day = String(now.getDate()).padStart(2, '0');
                        const hours = String(now.getHours()).padStart(2, '0');
                        const minutes = String(now.getMinutes()).padStart(2, '0');
                        
                        scheduledTimeInput.value = `${year}-${month}-${day}T${hours}:${minutes}`;
                    }
                }
            });
        }

        // Function to load scheduled auctions from API
        function loadScheduledAuctions() {
            const loadingEl = document.getElementById('scheduledAuctionsLoading');
            const contentEl = document.getElementById('scheduledAuctionsContent');
            const noScheduledEl = document.getElementById('noScheduledAuctions');
            
            loadingEl.style.display = 'flex';
            contentEl.style.display = 'none';
            noScheduledEl.style.display = 'none';
            
            fetch('/api/scheduled-auctions')
                .then(response => response.json())
                .then(data => {
                    loadingEl.style.display = 'none';
                    
                    // Check if we have scheduled auctions
                    if (data.scheduledAuctions && data.scheduledAuctions.length > 0) {
                        contentEl.style.display = 'block';
                        
                        // Create HTML for each scheduled auction
                        let html = '';
                        
                        data.scheduledAuctions.forEach(auction => {
                            const now = new Date();
                            const scheduledTime = new Date(auction.scheduled_start);
                            const isInPast = scheduledTime < now;
                            const statusColor = isInPast ? "danger" : "success";
                            const statusIcon = isInPast ? "pending" : "event_available";
                            const statusText = isInPast ? "Pending execution" : "Scheduled";
                            
                            html += `
                                <div class="scheduled-auction-card">
                                    <div class="auction-header">
                                        <div class="auction-number">Auction #${auction.id}</div>
                                        <div class="auction-status text-${statusColor}">
                                            <span class="material-icons-round" style="font-size: 16px;">${statusIcon}</span>
                                            ${statusText}
                                        </div>
                                    </div>
                                    <div class="auction-details">
                                        <div class="detail-item">
                                            <div class="detail-label">Start Time</div>
                                            <div class="detail-value">${auction.formatted_scheduled_start}</div>
                                        </div>
                                        <div class="detail-item">
                                            <div class="detail-label">Reduction</div>
                                            <div class="detail-value">${auction.reduction_percent}% every ${auction.interval_minutes} minute(s)</div>
                                        </div>
                                        <div class="detail-item">
                                            <div class="detail-label">Time Until Start</div>
                                            <div class="detail-value">${auction.time_until_start}</div>
                                        </div>
                                        <div class="detail-item">
                                            <div class="detail-label">Status</div>
                                            <div class="detail-value">${auction.is_active ? 'Active' : 'Waiting to start'}</div>
                                        </div>
                                    </div>
                                </div>
                            `;
                        });
                        
                        contentEl.innerHTML = html;
                    } else {
                        noScheduledEl.style.display = 'block';
                    }
                })
                .catch(error => {
                    console.error('Error loading scheduled auctions:', error);
                    loadingEl.innerHTML = `
                        <span class="material-icons-round text-danger">error</span>
                        <span>Error loading scheduled auctions. Please try again.</span>
                    `;
                });
        }
        
        // Load scheduled auctions when page loads
        document.addEventListener('DOMContentLoaded', function() {
            loadScheduledAuctions();
            
            // Add refresh button handler
            const refreshButton = document.getElementById('refreshScheduledAuctions');
            if (refreshButton) {
                refreshButton.addEventListener('click', loadScheduledAuctions);
            }
        });
    </script>

    <style>
        /* Footer styles */
        .footer {
            background-color: white;
            border-top: 1px solid var(--gray-200);
            padding: var(--spacing-lg) 0;
            margin-top: auto;
        }
        
        /* Scheduled Auction Cards */
        .scheduled-auction-card {
            background-color: white;
            border-radius: var(--border-radius-md);
            box-shadow: var(--shadow-sm);
            border: 1px solid var(--gray-200);
            margin-bottom: var(--spacing-md);
            overflow: hidden;
        }
        
        .auction-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.75rem 1rem;
            background-color: var(--gray-100);
            border-bottom: 1px solid var(--gray-200);
        }
        
        .auction-number {
            font-weight: 600;
        }
        
        .auction-status {
            display: flex;
            align-items: center;
            gap: 0.25rem;
            font-weight: 500;
            font-size: 0.9rem;
        }
        
        .auction-details {
            padding: 1rem;
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1rem;
        }
        
        .detail-item {
            display: flex;
            flex-direction: column;
        }
        
        .detail-label {
            font-size: 0.85rem;
            color: var(--gray-600);
            margin-bottom: 0.25rem;
        }
        
        .detail-value {
            font-weight: 500;
        }
        
        /* Animation */
        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.5; }
            100% { opacity: 1; }
        }
        
        .pulse-animation {
            animation: pulse 1s infinite;
        }
        
        /* Scrollbar styling */
        .products-container::-webkit-scrollbar {
            width: 8px;
        }
        
        .products-container::-webkit-scrollbar-track {
            background: var(--gray-100);
            border-radius: 10px;
        }
        
        .products-container::-webkit-scrollbar-thumb {
            background: var(--gray-400);
            border-radius: 10px;
        }
        
        .products-container::-webkit-scrollbar-thumb:hover {
            background: var(--gray-500);
        }
    </style>
    
    <script>
        // Utility function to format countdown as MM:SS
        function formatCountdown(totalSeconds) {
            const minutes = Math.floor(totalSeconds / 60);
            const seconds = totalSeconds % 60;
            return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
        }
        
        // Function to load and display auction status
        async function loadAuctionStatus() {
            try {
                const response = await fetch('/api/auction-status');
                const data = await response.json();
                
                console.log('Auction data:', data);
                
                // Update status section
                const statusContainer = document.getElementById('auctionStatusContent');
                const loadingContainer = document.getElementById('auctionStatusLoading');
                
                if (!statusContainer || !loadingContainer) return;
                
                if (!data.isRunning && !data.isScheduled) {
                    statusContainer.innerHTML = `
                        <div class="text-center p-4">
                            <div class="text-muted mb-2">
                                <span class="material-icons-round" style="font-size: 48px;">schedule_send</span>
                            </div>
                            <h4>Ingen Aktiv Auktion</h4>
                            <p class="text-muted">Start en ny auktion for at se status og tidslinje</p>
                        </div>
                    `;
                } else {
                    let statusHtml = '';
                    
                    if (data.isRunning) {
                        // Running auction
                        const nextUpdateTime = new Date(data.nextUpdateTime);
                        const now = new Date();
                        const timeUntilNext = Math.max(0, Math.floor((nextUpdateTime - now) / 1000));
                        
                        statusHtml = `
                            <div class="auction-status-card">
                                <h3 class="mb-3">🔥 Auktion Kører</h3>
                                <div class="auction-status-grid">
                                    <div class="status-item">
                                        <div class="status-label">Nuværende Rabat</div>
                                        <div class="status-value">${data.currentDiscountPercent}%</div>
                                    </div>
                                    <div class="status-item">
                                        <div class="status-label">Interval</div>
                                        <div class="status-value">${data.intervalMinutes} min</div>
                                    </div>
                                    <div class="status-item">
                                        <div class="status-label">Næste Økning</div>
                                        <div class="status-value">${data.schedule && data.schedule.length > 0 ? data.schedule[0].discountPercent : data.startingDiscountPercent}%</div>
                                    </div>
                                    <div class="status-item">
                                        <div class="status-label">Næste Update</div>
                                        <div class="countdown-display" id="mainCountdown">${formatCountdown(timeUntilNext)}</div>
                                    </div>
                                </div>
                            </div>
                        `;
                    } else if (data.isScheduled) {
                        // Scheduled auction
                        const startTime = new Date(data.scheduledStartTime);
                        const now = new Date();
                        const timeUntilStart = Math.max(0, Math.floor((startTime - now) / 1000));
                        
                        statusHtml = `
                            <div class="auction-status-card">
                                <h3 class="mb-3">📅 Auktion Planlagt</h3>
                                <div class="auction-status-grid">
                                    <div class="status-item">
                                        <div class="status-label">Start Tidspunkt</div>
                                        <div class="status-value">${data.formattedScheduledTime || 'TBD'}</div>
                                    </div>
                                    <div class="status-item">
                                        <div class="status-label">Første Rabat</div>
                                        <div class="status-value">${data.startingDiscountPercent}%</div>
                                    </div>
                                    <div class="status-item">
                                        <div class="status-label">Interval</div>
                                        <div class="status-value">${data.intervalMinutes} min</div>
                                    </div>
                                    <div class="status-item">
                                        <div class="status-label">Starter Om</div>
                                        <div class="countdown-display" id="mainCountdown">${formatCountdown(timeUntilStart)}</div>
                                    </div>
                                </div>
                            </div>
                        `;
                    }
                    
                    statusContainer.innerHTML = statusHtml;
                }
                
                // Update timeline
                loadPriceTimeline(data);
                loadCompleteTimeline(data);
                
                // Show content, hide loading
                loadingContainer.style.display = 'none';
                statusContainer.style.display = 'block';
                
            } catch (error) {
                console.error('Error loading auction status:', error);
                const statusContainer = document.getElementById('auctionStatusContent');
                if (statusContainer) {
                    statusContainer.innerHTML = `
                        <div class="text-center p-4">
                            <div class="text-danger mb-2">
                                <span class="material-icons-round" style="font-size: 48px;">error</span>
                            </div>
                            <h4>Fejl ved indlæsning</h4>
                            <p class="text-muted">Kunne ikke hente auction status</p>
                        </div>
                    `;
                }
            }
        }
        
        // Function to load and display price timeline
        function loadPriceTimeline(data) {
            const timelineContainer = document.getElementById('priceTimeline');
            if (!timelineContainer) return;
            
            if (!data.schedule || data.schedule.length === 0) {
                timelineContainer.innerHTML = '<div class="text-muted">Ingen tidsplan tilgængelig</div>';
                return;
            }
            
            const now = new Date();
            let html = '<div class="timeline-container">';
            
            // Show all price drops until 100% (or max 20 for performance)
            const maxItemsToShow = Math.min(data.schedule.length, 20);
            data.schedule.slice(0, maxItemsToShow).forEach((item, index) => {
                const dropTime = new Date(item.scheduledTime);
                const isPast = dropTime < now;
                const isCurrent = !isPast && index === 0; // First upcoming is current
                const isUpcoming = !isPast && !isCurrent;
                
                let cssClass = 'timeline-item';
                if (isCurrent) cssClass += ' active';
                else if (isUpcoming) cssClass += ' upcoming';
                
                const timeUntil = Math.max(0, dropTime - now);
                const totalSecondsUntil = Math.floor(timeUntil / 1000);
                const hoursUntil = Math.floor(totalSecondsUntil / 3600);
                const minutesUntil = Math.floor((totalSecondsUntil % 3600) / 60);
                const secondsUntil = totalSecondsUntil % 60;
                
                let countdownText = '';
                if (!isPast) {
                    if (hoursUntil > 0) {
                        countdownText = `om ${hoursUntil}t ${minutesUntil.toString().padStart(2, '0')}m`;
                    } else {
                        countdownText = `om ${formatCountdown(totalSecondsUntil)}`;
                    }
                }
                
                html += `
                    <div class="${cssClass}">
                        <div class="timeline-content">
                            <div>
                                <div class="timeline-time">${item.formattedTime}</div>
                                ${countdownText ? `<div class="timeline-countdown">${countdownText}</div>` : ''}
                            </div>
                            <div class="timeline-discount">-${item.discountPercent}%</div>
                        </div>
                    </div>
                `;
            });
            
            // Add summary if there are more intervals beyond what we're showing
            if (data.schedule.length > maxItemsToShow) {
                const remainingIntervals = data.schedule.length - maxItemsToShow;
                const finalDiscount = data.schedule[data.schedule.length - 1].discountPercent;
                const finalTime = moment(data.schedule[data.schedule.length - 1].scheduledTime).tz(data.timezone || 'CET').format('HH:mm:ss');
                
                html += `
                    <div class="timeline-item summary">
                        <div class="timeline-content">
                            <div>
                                <div class="timeline-time">...</div>
                                <div class="timeline-countdown">+${remainingIntervals} mere intervaller</div>
                            </div>
                            <div class="timeline-discount">→ ${finalDiscount}%</div>
                        </div>
                    </div>
                    <div class="timeline-item final">
                        <div class="timeline-content">
                            <div>
                                <div class="timeline-time">${finalTime}</div>
                                <div class="timeline-countdown">Slutpris</div>
                            </div>
                            <div class="timeline-discount">-${finalDiscount}%</div>
                        </div>
                    </div>
                `;
            }
            
            html += '</div>';
            timelineContainer.innerHTML = html;
            
            // Show the "View Complete Timeline" button if there are many intervals
            const showCompleteBtn = document.getElementById('showCompleteTimeline');
            if (showCompleteBtn && data.schedule.length > 10) {
                showCompleteBtn.style.display = 'block';
            }
        }
        
        // Function to load complete timeline
        function loadCompleteTimeline(data) {
            const completeContainer = document.getElementById('completeTimeline');
            if (!completeContainer || !data.schedule || data.schedule.length === 0) return;
            
            const now = new Date();
            let html = '<div class="table-responsive"><table class="table table-sm table-striped">';
            html += '<thead><tr><th>Interval</th><th>Tid</th><th>Rabat</th><th>Status</th></tr></thead><tbody>';
            
            data.schedule.forEach((item, index) => {
                const dropTime = new Date(item.scheduledTime);
                const isPast = dropTime < now;
                const isCurrent = !isPast && index === 0;
                
                let statusBadge = '';
                if (isPast) {
                    statusBadge = '<span class="badge badge-secondary">Afsluttet</span>';
                } else if (isCurrent) {
                    statusBadge = '<span class="badge badge-primary">Næste</span>';
                } else {
                    statusBadge = '<span class="badge badge-light">Kommende</span>';
                }
                
                let rowClass = '';
                if (isCurrent) rowClass = 'table-primary';
                else if (isPast) rowClass = 'table-secondary';
                
                html += `
                    <tr class="${rowClass}">
                        <td>#${index + 1}</td>
                        <td>${item.formattedDateTime}</td>
                        <td><strong>${item.discountPercent}%</strong></td>
                        <td>${statusBadge}</td>
                    </tr>
                `;
            });
            
            html += '</tbody></table></div>';
            completeContainer.innerHTML = html;
        }
        
        // Function to generate auction preview
        function generateAuctionPreview() {
            const form = document.querySelector('form[action="/auctions/all"]');
            const formData = new FormData(form);
            
            const interval = parseInt(formData.get('interval')) || 30;
            const reductionPercent = parseInt(formData.get('reductionPercent')) || 5;
            const initialDiscount = parseInt(formData.get('initialDiscount')) || 15;
            const startOption = formData.get('startOption');
            const scheduledTime = formData.get('scheduledTime');
            const timezone = formData.get('timezone') || 'CET';
            
            // Calculate start time
            let startTime;
            if (startOption === 'scheduled' && scheduledTime) {
                startTime = new Date(scheduledTime);
            } else {
                startTime = new Date();
            }
            
            // Generate timeline
            const schedule = [];
            let currentDiscount = initialDiscount;
            let currentTime = new Date(startTime);
            
            // Add initial discount at start time
            schedule.push({
                interval: 0,
                time: new Date(currentTime),
                discount: currentDiscount,
                isInitial: true
            });
            
            // Generate intervals until 100%
            let intervalNumber = 1;
            while (currentDiscount < 100) {
                currentTime = new Date(startTime.getTime() + (intervalNumber * interval * 60 * 1000));
                currentDiscount = Math.min(initialDiscount + (intervalNumber * reductionPercent), 100);
                
                schedule.push({
                    interval: intervalNumber,
                    time: new Date(currentTime),
                    discount: currentDiscount,
                    isInitial: false
                });
                
                intervalNumber++;
                if (currentDiscount >= 100) break;
            }
            
            return {
                interval,
                reductionPercent,
                initialDiscount,
                startTime,
                timezone,
                schedule,
                totalDuration: schedule[schedule.length - 1].time - startTime,
                totalIntervals: schedule.length
            };
        }
        
        // Function to display auction preview
        function displayAuctionPreview(previewData) {
            const previewSection = document.getElementById('auctionPreviewSection');
            const summaryContainer = document.getElementById('previewSummary');
            const timelineContainer = document.getElementById('previewTimeline');
            
            // Generate summary
            const totalHours = Math.floor(previewData.totalDuration / (1000 * 60 * 60));
            const totalMinutes = Math.floor((previewData.totalDuration % (1000 * 60 * 60)) / (1000 * 60));
            const finalTime = previewData.schedule[previewData.schedule.length - 1].time;
            
            summaryContainer.innerHTML = `
                <div class="alert" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; border: none;">
                    <h5 style="color: white; margin-bottom: 1rem;">📊 Auction Oversigt</h5>
                    <div class="grid" style="grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 1rem;">
                        <div>
                            <strong>Start Tidspunkt:</strong><br>
                            ${previewData.startTime.toLocaleString('da-DK', { timeZone: previewData.timezone })}
                        </div>
                        <div>
                            <strong>Slutning (100%):</strong><br>
                            ${finalTime.toLocaleString('da-DK', { timeZone: previewData.timezone })}
                        </div>
                        <div>
                            <strong>Total Varighed:</strong><br>
                            ${totalHours}t ${totalMinutes}m
                        </div>
                        <div>
                            <strong>Antal Intervaller:</strong><br>
                            ${previewData.totalIntervals} prisændringer
                        </div>
                    </div>
                </div>
            `;
            
            // Generate timeline
            let timelineHtml = '<div class="table-responsive"><table class="table table-striped">';
            timelineHtml += '<thead><tr><th>Interval</th><th>Tid</th><th>Rabat</th><th>Beskrivelse</th></tr></thead><tbody>';
            
            previewData.schedule.forEach((item, index) => {
                const timeStr = item.time.toLocaleString('da-DK', { 
                    timeZone: previewData.timezone,
                    hour: '2-digit',
                    minute: '2-digit',
                    day: '2-digit',
                    month: '2-digit'
                });
                
                let description = '';
                let rowClass = '';
                
                if (item.isInitial) {
                    description = '🚀 Initial rabat (med det samme)';
                    rowClass = 'table-success';
                } else if (item.discount >= 100) {
                    description = '🎯 GRATIS - Maksimal rabat nået';
                    rowClass = 'table-warning';
                } else {
                    description = `📉 +${previewData.reductionPercent}% prisreduktion`;
                }
                
                timelineHtml += `
                    <tr class="${rowClass}">
                        <td>${item.isInitial ? 'Start' : '#' + item.interval}</td>
                        <td><strong>${timeStr}</strong></td>
                        <td><span class="badge badge-primary">${item.discount}%</span></td>
                        <td>${description}</td>
                    </tr>
                `;
            });
            
            timelineHtml += '</tbody></table></div>';
            timelineContainer.innerHTML = timelineHtml;
            
            // Show preview section
            previewSection.style.display = 'block';
            previewSection.scrollIntoView({ behavior: 'smooth' });
        }
        
        // Function to update all countdowns
        function updateCountdowns() {
            const mainCountdown = document.getElementById('mainCountdown');
            if (mainCountdown) {
                const currentText = mainCountdown.textContent;
                const match = currentText.match(/(\d+):(\d+)/);
                if (match) {
                    const minutes = parseInt(match[1]);
                    const seconds = parseInt(match[2]);
                    const totalSeconds = minutes * 60 + seconds;
                    
                    if (totalSeconds > 0) {
                        const newTotalSeconds = totalSeconds - 1;
                        mainCountdown.textContent = formatCountdown(newTotalSeconds);
                        
                        // Reload data when countdown reaches 0
                        if (newTotalSeconds === 0) {
                            setTimeout(loadAuctionStatus, 1000);
                        }
                    }
                }
            }
            
            // Update timeline countdowns
            const timelineCountdowns = document.querySelectorAll('.timeline-countdown');
            timelineCountdowns.forEach(countdown => {
                const text = countdown.textContent;
                const match = text.match(/om (\d+):(\d+)/);
                if (match) {
                    const minutes = parseInt(match[1]);
                    const seconds = parseInt(match[2]);
                    const totalSeconds = minutes * 60 + seconds;
                    
                    if (totalSeconds > 0) {
                        const newTotalSeconds = totalSeconds - 1;
                        countdown.textContent = `om ${formatCountdown(newTotalSeconds)}`;
                    }
                }
            });
        }
        
        // Initialize dashboard
        document.addEventListener('DOMContentLoaded', function() {
            loadAuctionStatus();
            
            // Update countdowns every second
            setInterval(updateCountdowns, 1000);
            
            // Refresh data every 30 seconds
            setInterval(loadAuctionStatus, 30000);
            
            // Refresh button
            const refreshButton = document.getElementById('refreshAuctionStatus');
            if (refreshButton) {
                refreshButton.addEventListener('click', loadAuctionStatus);
            }
            
            // Complete timeline toggle buttons
            const showCompleteBtn = document.getElementById('showCompleteTimeline');
            const hideCompleteBtn = document.getElementById('toggleCompleteTimeline');
            const completeSection = document.getElementById('completeTimelineSection');
            
            if (showCompleteBtn && hideCompleteBtn && completeSection) {
                showCompleteBtn.addEventListener('click', function() {
                    completeSection.style.display = 'block';
                    showCompleteBtn.style.display = 'none';
                });
                
                hideCompleteBtn.addEventListener('click', function() {
                    completeSection.style.display = 'none';
                    showCompleteBtn.style.display = 'block';
                });
            }
            
            // Auction preview functionality
            const previewBtn = document.getElementById('previewAuction');
            const confirmBtn = document.getElementById('confirmStartAuction');
            const editBtn = document.getElementById('editAuction');
            const previewSection = document.getElementById('auctionPreviewSection');
            const auctionForm = document.querySelector('form[action="/auctions/all"]');
            
            if (previewBtn) {
                previewBtn.addEventListener('click', function() {
                    const previewData = generateAuctionPreview();
                    displayAuctionPreview(previewData);
                });
            }
            
            if (confirmBtn) {
                confirmBtn.addEventListener('click', function() {
                    // Submit the original form
                    if (auctionForm) {
                        auctionForm.submit();
                    }
                });
            }
            
            if (editBtn) {
                editBtn.addEventListener('click', function() {
                    // Hide preview and scroll back to form
                    previewSection.style.display = 'none';
                    auctionForm.scrollIntoView({ behavior: 'smooth' });
                });
            }
        });
    </script>
</body>
</html> 